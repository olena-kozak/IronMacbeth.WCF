<Window x:Class="IronMacbeth.Client.View.MainWindow"
        x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ei="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="IronMacbeth" Height="500" Width="800" MinWidth="800" MinHeight="400" Background="#FFC8E1EE">

    <Window.Resources>
        <Storyboard x:Key="ConnectedStoryboard">
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Width)" From="100" To="0" Duration="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Opacity)" From="1" To="0" Duration="0:0:0.25"/>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,2.5"/>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>

            <ColorAnimation Storyboard.TargetName="ConnectionStatusTextBlock" To="Green" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.25"/>
        </Storyboard>

        <Storyboard x:Key="RetryStoryboard">
            <DoubleAnimation Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(Button.Opacity)" From="0" To="1" Duration="0:0:0.25"/>
            <DoubleAnimation Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(Button.Width)" From="0" To="75" Duration="0:0:0.5"/>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="2.5,2.5"/>
            </ThicknessAnimationUsingKeyFrames>
            
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Width)" From="100" To="0" Duration="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Opacity)" From="1" To="0" Duration="0:0:0.25"/>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,2.5"/>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>

            <ColorAnimation Storyboard.TargetName="ConnectionStatusTextBlock" To="Red" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.25"/>
        </Storyboard>
        <Storyboard x:Key="RetryHideStoryboard">
            <DoubleAnimation Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(Button.Opacity)" From="1" To="0" Duration="0:0:0.25"/>
            <DoubleAnimation Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(Button.Width)" From="75" To="0" Duration="0:0:0.5"/>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="RetryButton" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,2.5"/>
            </ThicknessAnimationUsingKeyFrames>
            
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Width)" From="0" To="100" Duration="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(ProgressBar.Opacity)" From="0" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25"/>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="2.5,2.5"/>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BusyProgressBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            
            <ColorAnimation Storyboard.TargetName="ConnectionStatusTextBlock" To="Black" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.25"/>
        </Storyboard>
    </Window.Resources>

    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding ConnectionMenuHideRequired}" Value="True">
            <ei:ControlStoryboardAction 
                Storyboard="{StaticResource ConnectedStoryboard}"     
                ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
        <ei:DataTrigger Binding="{Binding ReconnectButtonShown}" Value="True">
            <ei:ControlStoryboardAction 
                Storyboard="{StaticResource RetryStoryboard}"   
                ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
        <ei:DataTrigger Binding="{Binding ReconnectButtonShown}" Value="False">
            <ei:ControlStoryboardAction 
                Storyboard="{StaticResource RetryHideStoryboard}"   
                ControlStoryboardOption="Play"/>
        </ei:DataTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <Border DockPanel.Dock="Top" Height="25" Background="#FFBFDBFF">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock x:Name="ConnectionStatusTextBlock" Text="{Binding ConnectionMenuText}" Margin="5,5,5,2.5" Foreground="Black"/>
                <ProgressBar x:Name="BusyProgressBar" Margin="2.5" Width="100" IsIndeterminate="True" />
                <Button x:Name="RetryButton" Margin="2.5" Width="75" Content="Retry" Command="{Binding ReconnectCommand}" Visibility="Collapsed"/>
                <WrapPanel Visibility="{Binding MenuVisibility}">
                    <Border Margin="5,2.5,5,0"  BorderThickness="1,0,0,0" BorderBrush="#FF395FB9"/>
                    <TextBlock Margin="5,5,0,2.5" Text="Logged in as "/>
                    <TextBlock Margin="0,5,5,2.5" Text="{Binding Login}" FontWeight="Bold"/>
                </WrapPanel>
            </StackPanel>
        </Border>
        <Border 
            DockPanel.Dock="Left" 
            BorderBrush="#FF405DC0" 
            BorderThickness="1"
            CornerRadius="1"
            Visibility="{Binding MenuVisibility}"
            Width="85">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="1*" MinHeight="{Binding ActualHeight, ElementName=MainNavigationItemsControl}"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="#FF4285C9">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button 
                            Margin="2,5,1,5" 
                            HorizontalAlignment="Stretch" 
                            Content="&lt;"
                            Grid.Column="0"
                            Command="{Binding BackCommand}"/>
                        <Button 
                            Margin="1,5,2,5" 
                            HorizontalAlignment="Stretch" 
                            Content="&gt;" 
                            Grid.Column="1"
                            Command="{Binding ForwardCommand}"/>
                    </Grid>
                </Border>
                <ItemsControl 
                    x:Name="MainNavigationItemsControl" 
                    ItemsSource="{Binding PageViewModels}" 
                    Grid.Row="1" 
                    VerticalAlignment="Top">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button 
                                Content="{Binding PageViewName}"
                                Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                CommandParameter="{Binding}"
                                Margin="2,5"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Border Grid.Row="2" BorderThickness="0,1,0,0" BorderBrush="#FF395FB9">
                    <Button
                        Content="Close" 
                        HorizontalAlignment="Stretch"
                        Margin="2,5" 
                        Command="{Binding CloseCommand}" 
                        CommandParameter="{Binding ElementName=Window}"/>
                </Border>
            </Grid>
        </Border>
        <Grid>
            <ContentControl Content="{Binding CurrentPageViewModel}"/>
        </Grid>
    </DockPanel>
</Window>